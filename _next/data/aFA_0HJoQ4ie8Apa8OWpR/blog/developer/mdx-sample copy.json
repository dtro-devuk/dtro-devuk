{"pageProps":{"mdxSource":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A showcase of using MDX for Blog content.\"), mdx(\"h1\", {\n    \"id\": \"a-header-title\"\n  }, \"A Header Title\"), mdx(\"h2\", {\n    \"id\": \"a-sub-title\"\n  }, \"A Sub Title\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Icons and Emoticons\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 OK\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u26D4\\uFE0F Problem\")), mdx(\"h2\", {\n    \"id\": \"code-snippets\"\n  }, \"Code Snippets\"), mdx(\"pre\", {\n    \"className\": \"language-jsx\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword module\"\n  }, \"import\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token imports\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token maybe-class-name\"\n  }, \"React\")), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword module\"\n  }, \"from\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'react'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword module\"\n  }, \"import\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token imports\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" graphql \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword module\"\n  }, \"from\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'gatsby'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function-variable function\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token maybe-class-name\"\n  }, \"HomePage\")), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" data \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token arrow operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword control-flow\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), \"div\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"data\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property-access\"\n  }, \"site\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property-access\"\n  }, \"siteMetadata\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property-access\"\n  }, \"description\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), \"div\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"why-mdx-\"\n  }, \"Why MDX ?\"), mdx(\"p\", null, \"\\u2764\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Powerful\"), \": MDX blends markdown and JSX syntax to fit perfectly in\\nReact/JSX-based projects.\"), mdx(\"p\", null, \"\\uD83D\\uDCBB \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Everything is a component\"), \": Use existing components inside your\\nMDX and import other MDX files as plain components.\"), mdx(\"p\", null, \"\\uD83D\\uDD27 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Customizable\"), \": Decide which component is rendered for each markdown\\nelement (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ h1: MyHeading }\"), \").\"), mdx(\"p\", null, \"\\uD83D\\uDCDA \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Markdown-based\"), \": The simplicity and elegance of markdown remains,\\nyou interleave JSX only when you want to.\"), mdx(\"p\", null, \"\\uD83D\\uDD25 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blazingly blazing fast\"), \": MDX has no runtime, all compilation occurs\\nduring the build stage.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mdxjs.com\"\n  }, \"MDX\"), \" is markdown for component era.\"), mdx(\"h2\", {\n    \"id\": \"test-list\"\n  }, \"Test List\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[2]\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \">A showcase of using MDX for Blog content.</p><h1 class=\" text-heading1} font-header text-2xl md:text-5xl py-5 font-semibold text-headingPrimary\">A Header Title</h1><h2 class=\" text-heading1} font-header text-xl md:text-4xl py-5 font-semibold text-headingPrimary\">A Sub Title</h2><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \"><strong class=\"font-extrabold\">Icons and Emoticons</strong></p><ul class=\"px-5 pr-5 list-disc\"><li>✅ OK</li><li>⛔️ Problem</li></ul><h2 class=\" text-heading1} font-header text-xl md:text-4xl py-5 font-semibold text-headingPrimary\">Code Snippets</h2><pre class=\"p-5 font-mono text-red-600 bg-black border border-accent2\"><code class=\"font-mono font-light text-pink-500 \"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">&#x27;react&#x27;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">&#x27;gatsby&#x27;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">HomePage</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span><span class=\"token property-access\">site</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">siteMetadata</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">description</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre><h2 class=\" text-heading1} font-header text-xl md:text-4xl py-5 font-semibold text-headingPrimary\">Why MDX ?</h2><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \">❤️ <strong class=\"font-extrabold\">Powerful</strong>: MDX blends markdown and JSX syntax to fit perfectly in\nReact/JSX-based projects.</p><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \">💻 <strong class=\"font-extrabold\">Everything is a component</strong>: Use existing components inside your\nMDX and import other MDX files as plain components.</p><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \">🔧 <strong class=\"font-extrabold\">Customizable</strong>: Decide which component is rendered for each markdown\nelement (<inlineCode class=\"font-mono bg-disabledInverse text-surface \">{ h1: MyHeading }</inlineCode>).</p><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \">📚 <strong class=\"font-extrabold\">Markdown-based</strong>: The simplicity and elegance of markdown remains,\nyou interleave JSX only when you want to.</p><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \">🔥 <strong class=\"font-extrabold\">Blazingly blazing fast</strong>: MDX has no runtime, all compilation occurs\nduring the build stage.</p><p class=\"p-3 text-sm font-light md:text-base lg:text-xl md:py-5 text-surface \"><a tabindex=\"0\" target=\"_blank\" rel=\"noopener norefferer\" class=\"Linkstyles__StandardStyledLink-sc-19um6fm-0 jujRGX\" href=\"https://mdxjs.com\">MDX</a> is markdown for component era.</p><h2 class=\" text-heading1} font-header text-xl md:text-4xl py-5 font-semibold text-headingPrimary\">Test List</h2><ul class=\"px-5 pr-5 list-disc\"><li>[1]</li><li>[2]</li></ul>","scope":{}},"frontMatter":{"wordCount":149,"readingTime":{"text":"1 min read","minutes":0.74,"time":44400,"words":148},"slug":"mdx-sample copy","title":"Sample MDX Content Copy","publishedAt":"2021-03-16","excerpt":"A sample of MDX content, to show what can be.","image":"/static/images/calibrate-san-francisco/banner.png","topic":"Developer","category":"mdx"}},"__N_SSG":true}